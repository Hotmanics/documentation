---
export interface Props {
  tutorials: {
    remix?: string
    hardhat?: string
    foundry?: string
  }
}

const { tutorials } = Astro.props as Props

const tutorialDetails = [
  {
    name: "Remix Tutorial",
    icon: "/images/tutorial-icons/remix-icn.png",
    url: tutorials.remix,
  },
  {
    name: "Hardhat Tutorial",
    icon: "/images/tutorial-icons/hardhat-icn.png",
    url: tutorials.hardhat,
  },
  {
    name: "Foundry Tutorial",
    icon: "/images/tutorial-icons/foundry-icn.png",
    url: tutorials.foundry,
  },
].filter((tutorial) => tutorial.url)
---

<div class="tutorial-table" style={`display: grid; grid-template-columns: repeat(${tutorialDetails.length}, 1fr);`}>
  {
    tutorialDetails.map((tutorial, index) => (
      <div class="tutorial-column">
        <a href={tutorial.url}>
          <img src={tutorial.icon} alt={tutorial.name} style="max-width: 70px;" />
          <p>{tutorial.name}</p>
        </a>
      </div>
    ))
  }
</div>

<style>
  @media (max-width: 768px) {
    .tutorial-column img {
      width: 60px;
    }
  }

  .tutorial-table {
    gap: 1rem;
    margin-top: 1rem;
    padding: 1rem;
    background-color: #f5f7fd;
  }

  .tutorial-column {
    text-align: center;
  }

  .tutorial-column img {
    max-width: 100px;
    height: auto;
    transition: transform 0.1s ease;
    border-radius: 8px;
  }

  .tutorial-column p {
    transition: font-weight 0.1s ease;
    margin-top: 0.5rem;
  }

  .tutorial-column a:hover img {
    transform: scale(1.05);
  }

  .tutorial-column a:hover p {
    color: var(--blue-600, #375bd2);
    font-weight: bold;
  }
</style>
